{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniqueSuffix": {
      "type": "String",
      "metadata": {
        "description": "Suffix added to all resource name to make them unique."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "resourceName" : "[concat('wssecurity',parameters('uniqueSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/tags",
      "name": "default",
      "apiVersion": "2019-10-01",
      "dependsOn": [],
      "properties": {
          "tags": {
              "DeploymentId": "[parameters('uniqueSuffix')]"
          }
      }
    },
      {
          "type": "Microsoft.Devices/IotHubs",
          "apiVersion": "2020-03-01",
          "name": "[variables('resourceName')]",
          "location": "eastus",
          "sku": {
              "name": "S1",
              "tier": "Standard",
              "capacity": 1
          },
          "properties": {
              "ipFilterRules": [],
              "eventHubEndpoints": {
                  "events": {
                      "retentionTimeInDays": 1,
                      "partitionCount": 4
                  }
              },
              "routing": {
                  "endpoints": {
                      "serviceBusQueues": [],
                      "serviceBusTopics": [],
                      "eventHubs": [],
                      "storageContainers": []
                  },
                  "routes": [],
                  "fallbackRoute": {
                      "name": "$fallback",
                      "source": "DeviceMessages",
                      "condition": "true",
                      "endpointNames": [
                          "events"
                      ],
                      "isEnabled": true
                  }
              },
              "storageEndpoints": {
                  "$default": {
                      "sasTtlAsIso8601": "PT1H",
                      "connectionString": null,
                      "containerName": null
                  }
              },
              "messagingEndpoints": {
                  "fileNotifications": {
                      "lockDurationAsIso8601": "PT1M",
                      "ttlAsIso8601": "PT1H",
                      "maxDeliveryCount": 10
                  }
              },
              "enableFileUploadNotifications": false,
              "cloudToDevice": {
                  "maxDeliveryCount": 10,
                  "defaultTtlAsIso8601": "PT1H",
                  "feedback": {
                      "lockDurationAsIso8601": "PT1M",
                      "ttlAsIso8601": "PT1H",
                      "maxDeliveryCount": 10
                  }
              },
              "features": "None"
          }
      },
      {
          "type": "microsoft.insights/components",
          "apiVersion": "2018-05-01-preview",
          "name": "[variables('resourceName')]",
          "location": "eastus",
          "kind": "web",
          "properties": {
              "Application_Type": "web",
              "Request_Source": "IbizaWebAppExtensionCreate",
              "RetentionInDays": 90,
              "publicNetworkAccessForIngestion": "Enabled",
              "publicNetworkAccessForQuery": "Enabled"
          }
      },
      {
          "type": "Microsoft.KeyVault/vaults",
          "apiVersion": "2016-10-01",
          "name": "[variables('resourceName')]",
          "location": "eastus",
          "properties": {
              "sku": {
                  "family": "A",
                  "name": "Standard"
              },
              "tenantId": "d280491c-b27a-41bf-9623-21b60cf430b3",
              "accessPolicies": [
                  {
                      "tenantId": "d280491c-b27a-41bf-9623-21b60cf430b3",
                      "objectId": "c1c8abcf-aa1f-443b-aa47-93df8879d9b2",
                      "permissions": {
                          "keys": [
                              "Get",
                              "List",
                              "Update",
                              "Create",
                              "Import",
                              "Delete",
                              "Recover",
                              "Backup",
                              "Restore"
                          ],
                          "secrets": [
                              "Get",
                              "List",
                              "Set",
                              "Delete",
                              "Recover",
                              "Backup",
                              "Restore"
                          ],
                          "certificates": [
                              "Get",
                              "List",
                              "Update",
                              "Create",
                              "Import",
                              "Delete",
                              "Recover",
                              "Backup",
                              "Restore",
                              "ManageContacts",
                              "ManageIssuers",
                              "GetIssuers",
                              "ListIssuers",
                              "SetIssuers",
                              "DeleteIssuers"
                          ]
                      }
                  }
              ],
              "enabledForDeployment": false,
              "enabledForDiskEncryption": false,
              "enabledForTemplateDeployment": false,
              "enableSoftDelete": true
          }
      },
      {
          "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
          "apiVersion": "2020-05-01",
          "name": "[variables('resourceName')]",
          "location": "eastus",
          "properties": {
              "customRules": [],
              "policySettings": {
                  "requestBodyCheck": true,
                  "maxRequestBodySizeInKb": 128,
                  "fileUploadLimitInMb": 100,
                  "state": "Enabled",
                  "mode": "Detection"
              },
              "managedRules": {
                  "managedRuleSets": [
                      {
                          "ruleSetType": "OWASP",
                          "ruleSetVersion": "3.0",
                          "ruleGroupOverrides": []
                      }
                  ],
                  "exclusions": []
              }
          }
      },
      {
          "type": "Microsoft.Network/publicIPAddresses",
          "apiVersion": "2020-05-01",
          "name": "[variables('resourceName')]",
          "location": "eastus",
          "sku": {
              "name": "Standard"
          },
          "properties": {
              "ipAddress": "52.142.16.152",
              "publicIPAddressVersion": "IPv4",
              "publicIPAllocationMethod": "Static",
              "idleTimeoutInMinutes": 4,
              "ipTags": []
          }
      },
      {
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "2020-05-01",
          "name": "[variables('resourceName')-hub]",
          "location": "eastus",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": [
                      "10.0.0.0/16"
                  ]
              },
              "subnets": [
                  {
                      "name": "default",
                      "properties": {
                          "addressPrefix": "10.0.0.0/24",
                          "delegations": [],
                          "privateEndpointNetworkPolicies": "Enabled",
                          "privateLinkServiceNetworkPolicies": "Enabled"
                      }
                  }
              ],
              "virtualNetworkPeerings": [],
              "enableDdosProtection": false,
              "enableVmProtection": false
          }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-05-01",
        "name": "[variables('resourceName')-web]",
        "location": "eastus",
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.1.0.0/16"
                ]
            },
            "subnets": [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "10.1.0.0/24",
                        "delegations": [],
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                }
            ],
            "virtualNetworkPeerings": [],
            "enableDdosProtection": false,
            "enableVmProtection": false
        }
    },
      {
          "type": "microsoft.operationalinsights/workspaces",
          "apiVersion": "2020-03-01-preview",
          "name": "[variables('resourceName')]",
          "location": "eastus",
          "properties": {
              "sku": {
                  "name": "pergb2018"
              },
              "retentionInDays": 30,
              "workspaceCapping": {
                  "dailyQuotaGb": -1
              },
              "publicNetworkAccessForIngestion": "Enabled",
              "publicNetworkAccessForQuery": "Enabled"
          }
      },
      {
          "type": "Microsoft.Web/serverfarms",
          "apiVersion": "2018-02-01",
          "name": "[variables('resourceName')]",
          "location": "East US",
          "sku": {
              "name": "P1v2",
              "tier": "PremiumV2",
              "size": "P1v2",
              "family": "Pv2",
              "capacity": 1
          },
          "kind": "app",
          "properties": {
              "perSiteScaling": false,
              "maximumElasticWorkerCount": 1,
              "isSpot": false,
              "reserved": false,
              "isXenon": false,
              "hyperV": false,
              "targetWorkerCount": 0,
              "targetWorkerSizeId": 0
          }
      },
      {
          "type": "microsoft.alertsmanagement/smartdetectoralertrules",
          "apiVersion": "2019-06-01",
          "name": "[concat('failure anomalies ', variables('resourceName'))]",
          "location": "global",
          "dependsOn": [
              "[resourceId('microsoft.insights/components', variables('resourceName'))]"
          ],
          "properties": {
              "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
              "state": "Enabled",
              "severity": "Sev3",
              "frequency": "PT1M",
              "detector": {
                  "id": "FailureAnomaliesDetector",
                  "name": "Failure Anomalies",
                  "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                  "supportedResourceTypes": [
                      "ApplicationInsights"
                  ]
              },
              "scope": [
                  "[resourceId('microsoft.insights/components', variables('resourceName'))]"
              ],
              "actionGroups": {
                  "groupIds": [
                      "/subscriptions/e433f371-e5e9-4238-abc2-7c38aa596a18/resourcegroups/privacycentral/providers/microsoft.insights/actiongroups/application insights smart detection"
                  ]
              }
          }
      },
      {
          "type": "Microsoft.Network/virtualNetworks/subnets",
          "apiVersion": "2020-05-01",
          "name": "[concat(variables('resourceName'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks', concat(variables('resourceName'), '-hub'))]"
          ],
          "properties": {
              "addressPrefix": "10.0.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
          }
      },
      {
        "type": "Microsoft.Network/virtualNetworks/subnets",
        "apiVersion": "2020-05-01",
        "name": "[concat(variables('resourceName'), '/default')]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', concat(variables('resourceName'), '-web'))]"
        ],
        "properties": {
            "addressPrefix": "10.1.0.0/24",
            "delegations": [],
            "privateEndpointNetworkPolicies": "Enabled",
            "privateLinkServiceNetworkPolicies": "Enabled"
        }
    },
      {
          "type": "Microsoft.Web/sites",
          "apiVersion": "2018-11-01",
          "name": "[variables('resourceName')]",
          "location": "East US",
          "dependsOn": [
              "[resourceId('Microsoft.Web/serverfarms', variables('resourceName'))]"
          ],
          "kind": "app",
          "properties": {
              "enabled": true,
              "hostNameSslStates": [
                  {
                      "name": "[concat(variables('resourceName'), '.azurewebsites.net')]",
                      "sslState": "Disabled",
                      "hostType": "Standard"
                  },
                  {
                      "name": "[concat(variables('resourceName'), '.scm.azurewebsites.net')]",
                      "sslState": "Disabled",
                      "hostType": "Repository"
                  }
              ],
              "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('resourceName'))]",
              "reserved": false,
              "isXenon": false,
              "hyperV": false,
              "siteConfig": {},
              "scmSiteAlsoStopped": false,
              "clientAffinityEnabled": true,
              "clientCertEnabled": false,
              "hostNamesDisabled": false,
              "containerSize": 0,
              "dailyMemoryTimeQuota": 0,
              "httpsOnly": false,
              "redundancyMode": "None"
          }
      },
      {
          "type": "Microsoft.Web/sites/config",
          "apiVersion": "2018-11-01",
          "name": "[concat(variables('resourceName'),'/web')]",
          "location": "East US",
          "dependsOn": [
              "[resourceId('Microsoft.Web/sites', variables('resourceName'))]"
          ],
          "properties": {
              "numberOfWorkers": 1,
              "defaultDocuments": [
                  "Default.htm",
                  "Default.html",
                  "Default.asp",
                  "index.htm",
                  "index.html",
                  "iisstart.htm",
                  "default.aspx",
                  "index.php",
                  "hostingstart.html"
              ],
              "netFrameworkVersion": "v4.0",
              "requestTracingEnabled": false,
              "remoteDebuggingEnabled": false,
              "httpLoggingEnabled": false,
              "logsDirectorySizeLimit": 35,
              "detailedErrorLoggingEnabled": false,
              "publishingUsername": "[concat('$', variables('resourceName'))]",
              "scmType": "None",
              "use32BitWorkerProcess": true,
              "webSocketsEnabled": false,
              "alwaysOn": true,
              "managedPipelineMode": "Integrated",
              "virtualApplications": [
                  {
                      "virtualPath": "/",
                      "physicalPath": "site\\wwwroot",
                      "preloadEnabled": true
                  }
              ],
              "loadBalancing": "LeastRequests",
              "experiments": {
                  "rampUpRules": []
              },
              "autoHealEnabled": false,
              "localMySqlEnabled": false,
              "ipSecurityRestrictions": [
                  {
                      "ipAddress": "Any",
                      "action": "Allow",
                      "priority": 1,
                      "name": "Allow all",
                      "description": "Allow all access"
                  }
              ],
              "scmIpSecurityRestrictions": [
                  {
                      "ipAddress": "Any",
                      "action": "Allow",
                      "priority": 1,
                      "name": "Allow all",
                      "description": "Allow all access"
                  }
              ],
              "scmIpSecurityRestrictionsUseMain": false,
              "http20Enabled": false,
              "minTlsVersion": "1.2",
              "ftpsState": "AllAllowed",
              "reservedInstanceCount": 0
          }
      },
      {
          "type": "Microsoft.Web/sites/hostNameBindings",
          "apiVersion": "2018-11-01",
          "name": "[concat(variables('resourceName'), '/', variables('resourceName'), '.azurewebsites.net')]",
          "location": "East US",
          "dependsOn": [
              "[resourceId('Microsoft.Web/sites', variables('resourceName'))]"
          ],
          "properties": {
              "siteName": "[variables('resourceName')]",
              "hostNameType": "Verified"
          }
      },
      {
          "type": "Microsoft.Network/applicationGateways",
          "apiVersion": "2020-05-01",
          "name": "[variables('resourceName')]",
          "location": "eastus",
          "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('resourceName'), '-hub', 'default')]",
              "[resourceId('Microsoft.Network/publicIPAddresses', variables('resourceName'))]"
          ],
          "properties": {
              "sku": {
                  "name": "WAF_v2",
                  "tier": "WAF_v2",
                  "capacity": 2
              },
              "gatewayIPConfigurations": [
                  {
                      "name": "appGatewayIpConfig",
                      "properties": {
                          "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(variables('resourceName'),'-hub'), 'default')]"
                          }
                      }
                  }
              ],
              "sslCertificates": [],
              "trustedRootCertificates": [],
              "frontendIPConfigurations": [
                  {
                      "name": "appGwPublicFrontendIp",
                      "properties": {
                          "privateIPAllocationMethod": "Dynamic",
                          "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('resourceName'))]"
                          }
                      }
                  },
                  {
                      "name": "appGwPrivateFrontendIp",
                      "properties": {
                          "privateIPAddress": "10.5.0.6",
                          "privateIPAllocationMethod": "Static",
                          "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(variables('resourceName'),'-hub'), 'default')]"
                          }
                      }
                  }
              ],
              "frontendPorts": [
                  {
                      "name": "port_80",
                      "properties": {
                          "port": 80
                      }
                  }
              ],
              "backendAddressPools": [
                  {
                      "name": "[concat(variables('resourceName'), 'bep')]",
                      "properties": {
                          "backendAddresses": [
                              {
                                  "ipAddress": "10.0.0.5"
                              }
                          ]
                      }
                  }
              ],
              "backendHttpSettingsCollection": [
                  {
                      "name": "[concat(variables('resourceName'), 'httpsetting')]",
                      "properties": {
                          "port": 80,
                          "protocol": "Http",
                          "cookieBasedAffinity": "Disabled",
                          "pickHostNameFromBackendAddress": false,
                          "requestTimeout": 20
                      }
                  }
              ],
              "httpListeners": [
                  {
                      "name": "[concat(variables('resourceName'), 'listener')]",
                      "properties": {
                          "frontendIPConfiguration": {
                              "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('resourceName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                          },
                          "frontendPort": {
                              "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('resourceName')), '/frontendPorts/port_80')]"
                          },
                          "protocol": "Http",
                          "hostNames": [],
                          "requireServerNameIndication": false
                      }
                  }
              ],
              "urlPathMaps": [],
              "requestRoutingRules": [
                  {
                      "name": "[variables('resourceName')]",
                      "properties": {
                          "ruleType": "Basic",
                          "httpListener": {
                              "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('resourceName')), '/httpListeners/', concat(variables('resourceName'), 'listener'))]"
                          },
                          "backendAddressPool": {
                              "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('resourceName')), '/backendAddressPools/', concat(variables('resourceName'), 'bep'))]"
                          },
                          "backendHttpSettings": {
                              "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('resourceName')), '/backendHttpSettingsCollection/', concat(variables('resourceName'), 'httpsetting'))]"
                          }
                      }
                  }
              ],
              "probes": [],
              "rewriteRuleSets": [],
              "redirectConfigurations": [],
              "privateLinkConfigurations": [],
              "webApplicationFirewallConfiguration": {
                  "enabled": true,
                  "firewallMode": "Detection",
                  "ruleSetType": "OWASP",
                  "ruleSetVersion": "3.0",
                  "disabledRuleGroups": [],
                  "requestBodyCheck": true,
                  "maxRequestBodySizeInKb": 128,
                  "fileUploadLimitInMb": 100
              },
              "enableHttp2": false
          }
      }
  ]
}